version: '1.0'

services:
  zookeeper:
    image: zookeeper:3.8
    container_name: zookeeper-3.8
    ports:
      - 2181:2181
    networks:
      - learning-network

  kafka:
    image: bitnami/kafka:3.2
    container_name: kafka-3.2
    ports:
      - 9092:9092
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@localhost:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - learning-network

  elasticsearch:
    image: elasticsearch:7.17.18
    container_name: elasticsearch-7.17.18
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
#    volumes:
#      - /Users/rainy/Developer/docker-volumes/elasticsearch-volume:/usr/share/elasticsearch/data
    networks:
      - learning-network

  kibana:
    image: kibana:7.17.18
    container_name: kibana-7.17.18
    ports:
      - 5601:5601
    environment:
      - I18N_LOCALE=zh-CN
    depends_on:
      - elasticsearch #kibana在elasticsearch启动之后再启动
#    volumes:
#      - /Users/rainy/Developer/docker-volumes/kibana-volume:/usr/share/kibana/data
    networks:
      - learning-network

  logstash:
    image: logstash:7.17.18
    container_name: logstash-7.17.18
    ports:
      - "5044:5044"
      - "9600:9600"
    depends_on:
      - elasticsearch # logstash在elasticsearch启动之后再启动
#    volumes:
#      - /Users/rainy/Developer/docker-volumes/logstash-volume:/usr/share/logstash/data
    networks:
      - learning-network

  mongo:
    image: mongo:5.0
    container_name: mongo-5.0
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=12345678
    networks:
      - learning-network

  postgres:
    image: postgres:15
    container_name: postgres-15
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 12345678
    networks:
      - learning-network

  redis:
    image: redis:7.2.4
    container_name: redis-7.2.4
    ports:
      - 6379:6379
    networks:
      - learning-network


networks:
  learning-network:
    driver: bridge

